{"version":3,"sources":["Card.js","Cardlist.js","SearchBox.jsx","scroll.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","OnSearchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","searchchange","event","setState","searchfield","target","value","state","fetch","then","Response","json","filteredrobots","this","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"oOAgBeA,EAZF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACzB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,mBACrB,gCACC,6BAAKF,IACL,4BAAIC,WCeOK,EAnBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACI,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACb,OACI,cAAC,EAAD,CAEIV,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,MACjBC,GAAIK,EAAOG,GAAGR,IAHTQ,SCEdC,MAbf,YAAsC,IAAlBC,EAAiB,EAAjBA,eAChB,OACI,8BACI,uBACAT,UAAU,mCACVU,KAAK,SACLC,YAAY,SACZC,SAAUH,O,MCEPI,MATf,SAAgBC,GACZ,OAEI,cADA,CACA,OAAKC,MAAO,CAACC,UAAW,SAASC,OAAO,kBAAkBC,OAAO,SAAjE,UACKJ,EAAMK,SADX,QCIaC,E,kDACjB,aAAc,IAAD,8BACT,gBAMJC,aAAe,SAACC,GACR,EAAKC,SAAS,CAACC,YAAYF,EAAMG,OAAOC,SAN5C,EAAKC,MAAM,CACPvB,OAAO,GACPoB,YAAY,IAJP,E,qDAWjB,WAAoB,IAAD,OACfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAvB,GAAI,OAAE,EAAKiB,SAAS,CAACnB,OAAOE,S,oBAGlC,WAAU,IAAD,OACC0B,EAAiBC,KAAKN,MAAMvB,OAAO8B,QAAO,SAAA9B,GAE7C,OAAOA,EAAOP,KAAKsC,cAAcC,SAAS,EAAKT,MAAMH,YAAYW,kBAGxE,OAA+B,IAA3BF,KAAKN,MAAMvB,OAAOiC,OACX,yCAGH,sBAAKrC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWS,eAAgBwB,KAAKZ,eAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ4B,a,GAhCDM,aCGlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACT,8BACE,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.7031a87f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\n\r\nconst Card = ({name,email,id}) => {\r\n\treturn(\r\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?size=200x200`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n \r\n\r\n\r\nconst Cardlist = ({robots}) =>{\r\n    return(\r\n        <div>\r\n            {\r\n            robots.map((user,i)=>{\r\n                return(\r\n                    <Card \r\n                        key={i}\r\n                        name={robots[i].name}\r\n                        email={robots[i].email}\r\n                        id={robots[i].id}\r\n                    />\r\n                );\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cardlist;","import React from 'react'\r\n\r\nfunction SearchBox({OnSearchChange}) {\r\n    return (\r\n        <div>\r\n            <input\r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search'\r\n            onChange={OnSearchChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\n\r\nfunction Scroll(props) {\r\n    return (\r\n        // <h1>fuck</h1>\r\n        <div style={{overflowY: 'scroll',border:'1px solid black',height:'500px'}}>\r\n            {props.children};\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\nimport Cardlist from './Cardlist'\r\nimport SearchBox from './SearchBox'\r\n// import { robots } from './robots'\r\nimport './app.css';\r\nimport Scroll from './scroll';\r\n\r\n\r\n\r\nexport default class App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state={\r\n            robots:[],\r\n            searchfield:''\r\n        }\r\n    }\r\n    searchchange = (event) => {\r\n            this.setState({searchfield:event.target.value})\r\n    }\r\n\r\ncomponentDidMount(){\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(Response=>Response.json())\r\n    .then(user=>this.setState({robots:user}))\r\n}\r\n\r\n    render() {\r\n        const filteredrobots = this.state.robots.filter(robots=>\r\n        {\r\n           return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        }\r\n    );\r\n    if (this.state.robots.length===0){\r\n        return <h1>loading</h1>\r\n    }else{\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>Robo friends</h1>\r\n                <SearchBox OnSearchChange={this.searchchange}/>\r\n                <Scroll>\r\n                <Cardlist robots={filteredrobots}/>\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n    }\r\n}\r\n  \r\n\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport 'tachyons'\r\nimport App from './App';\r\n\r\n// import {robots} from './robots.js';\r\nimport reportWebVitals from './reportWebVitals';\r\n// import Apps from './apps'\r\n\r\nReactDOM.render(\r\n<div>\r\n  <App/>\r\n</div>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}